import type { CodegenConfig } from "@graphql-codegen/cli"
import type { Types } from "@graphql-codegen/plugin-helpers"
import { addTypenameSelectionDocumentTransform } from "@graphql-codegen/client-preset"

const _generateComposables: Types.ConfiguredOutput = {
  plugins: [
    { add: { content: "/* eslint-disable */" } },
    { add: { content: "/* DO NOT EDIT! This file is auto-generated by graphql-code-generator - see `codegen.ts` */" } },
    "typescript",
    "typescript-operations",
    "typescript-vue-urql"
  ],
  config: {
    enumsAsTypes: true,
    useTypeImports: true
  }
}

const generateDocuments: Types.ConfiguredOutput = {
  preset: "client",
  presetConfig: {
    fragmentMasking: false,
    persistedDocuments: true
  },
  documentTransforms: [addTypenameSelectionDocumentTransform]
}

const config: CodegenConfig = {
  schema: "./schema.graphql",
  documents: ["./graphql/**/*.graphql", "./app/**/*.vue"],
  ignoreNoDocuments: true, // for better experience with the watcher
  generates: {
    // "./app/composables/graphql-queries.ts": _generateComposables,
    "./app/utils/": generateDocuments
  },

}

export default config
